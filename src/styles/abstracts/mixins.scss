@import "~@/styles/abstracts/functions.scss";

$states: (
    primary: (
        color: white,
        background-color: _(colors, primary)
    ),
    secondary: (
        color: white,
        background-color: _(colors, secondary)
    ),
    success: (
        color: white,
        background-color: _(colors, success)
    ),
    danger: (
        color: white,
        background-color: _(colors, danger)
    ),
    warning: (
        color: white,
        background-color: _(colors, warning)
    ),
    info: (
        color: white,
        background-color: _(colors, info)
    ),
    //transparent: transparent
);
@mixin unit-style($class-name, $function) {
    height: _(pristine, unit, base);

    // Padding ---------------------------------------------------------------------------------------------------------
    @apply pr-px-base;

    // Font ------------------------------------------------------------------------------------------------------------
    @apply pr-text-base-text-color pr-bg-white;

    // Borders ---------------------------------------------------------------------------------------------------------
    @apply pr-rounded-base pr-border-solid pr-border pr-border-base-border-color;

    // Shadows ---------------------------------------------------------------------------------------------------------
    //@apply pr-shadow;

    // Styling ---------------------------------------------------------------------------------------------------------
    @apply pr-bg-white;

    // Specificities ---------------------------------------------------------------------------------------------------
    @if $function == 'clickable' {
        @apply pr-cursor-pointer;
    }

    // Native states
    &:hover {
        border-color: darken(_(colors, base-border-color), 10%);
    }

    // Replace focus outline
    &:focus {
        border-color: darken(_(colors, base-border-color), 10%);
        @apply pr-bg-base-bg-color pr-outline-none;
    }

    @if $function == clickable {
        &:active {
            border-color: darken(_(colors, base-border-color), 10%);
            background-color: darken(_(colors, base-bg-color), 5%);
        }
    } @else if $function == selectable {
        &::-webkit-input-placeholder,
        &:-moz-placeholder,
        &::-moz-placeholder,
        &:-ms-input-placeholder {
            @apply pr-text-sm pr-tracking-base pr-text-grey-light;
        }
    }

    // Class states
    @each $state, $state-val in $states {
        &.#{$class-name}--#{$state} {
            border-color: map-get($state-val, background-color);
            @if $function == 'clickable' {
                color: map-get($state-val, color);
                background-color: map-get($state-val, background-color);
            } @else if $function == 'selectable' {
                background-color: rgba(map-get($state-val, background-color), .1);
            }
            // Native states
            &:hover {
                border-color: darken(map-get($state-val, background-color), 5%);
                @if $function == 'clickable' {
                    background-color: darken(map-get($state-val, background-color), 5%);
                }
            }

            // Replace focus outline
            &:focus {
                border-color: darken(map-get($state-val, background-color), 8%);
                @if $function == 'clickable' {
                    background-color: darken(map-get($state-val, background-color), 8%);
                }
            }

            @if $function == 'clickable' {
                &:active {
                    border-color: darken(map-get($state-val, background-color), 12%);
                    background-color: darken(map-get($state-val, background-color), 12%);
                }
            }
        }
    }
}